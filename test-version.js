#!/usr/bin/env node

// Script para testar diferentes vers√µes do WhatsApp Web.js
const { Client, LocalAuth } = require("whatsapp-web.js");
const qrcode = require("qrcode-terminal");

console.log('üß™ TESTE DE VERS√ÉO WHATSAPP WEB.JS');
console.log('==================================');

// Configura√ß√£o ultra-simples para teste
const client = new Client({
    authStrategy: new LocalAuth({
        clientId: "test-version"
    }),
    puppeteer: {
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
        timeout: 60000
    }
});

// Eventos b√°sicos para teste
client.on('qr', (qr) => {
    console.log('‚úÖ QR CODE GERADO!');
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('üü¢ WHATSAPP CONECTADO!');
    console.log('üì± Vers√£o funcionando corretamente!');
});

client.on('authenticated', () => {
    console.log('üîê AUTENTICADO COM SUCESSO!');
});

client.on('auth_failure', () => {
    console.log('‚ùå FALHA NA AUTENTICA√á√ÉO');
});

client.on('disconnected', () => {
    console.log('üîå DESCONECTADO');
});

// Inicializar
console.log('üöÄ Iniciando teste...');
client.initialize().catch(err => {
    console.error('‚ùå Erro:', err.message);
});

// Timeout de seguran√ßa
setTimeout(() => {
    console.log('‚è∞ Timeout - encerrando teste');
    process.exit(0);
}, 120000);
