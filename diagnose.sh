#!/bin/bash
# Diagn√≥stico completo do ambiente

echo "üîç DIAGN√ìSTICO COMPLETO DO AMBIENTE"
echo "=================================="

echo -e "\nüìã 1. INFORMA√á√ïES DO SISTEMA:"
echo "OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'=' -f2 | tr -d '\"')"
echo "Kernel: $(uname -r)"
echo "Arquitetura: $(uname -m)"

echo -e "\nüìã 2. CHROME/CHROMIUM:"
echo "Chrome version:"
google-chrome --version 2>/dev/null || echo "‚ùå Chrome n√£o encontrado"
echo "Chrome path: $(which google-chrome-stable 2>/dev/null || echo '‚ùå N√£o encontrado')"
echo "Chromium version:"
chromium --version 2>/dev/null || echo "‚ùå Chromium n√£o encontrado"
echo "Chromium path: $(which chromium 2>/dev/null || echo '‚ùå N√£o encontrado')"

echo -e "\nüìã 3. NODE.JS E NPM:"
echo "Node.js: $(node --version)"
echo "NPM: $(npm --version)"

echo -e "\nüìã 4. DEPEND√äNCIAS SISTEMA:"
echo "Verificando bibliotecas essenciais..."
libs=("libnss3" "libatk-bridge2.0-0" "libdrm2" "libxkbcommon0" "libxcomposite1" "libxdamage1" "libxrandr2" "libgbm1" "libxss1" "libasound2")
for lib in "${libs[@]}"; do
    if dpkg -l | grep -q "^ii.*$lib"; then
        echo "‚úÖ $lib instalado"
    else
        echo "‚ùå $lib N√ÉO instalado"
    fi
done

echo -e "\nüìã 5. XVFB (DISPLAY VIRTUAL):"
echo "Display atual: $DISPLAY"
if pgrep -f Xvfb > /dev/null; then
    echo "‚úÖ Xvfb rodando"
else
    echo "‚ùå Xvfb n√£o est√° rodando"
fi

echo -e "\nüìã 6. PROCESSOS CHROME:"
chrome_procs=$(ps aux | grep -E "(chrome|chromium)" | grep -v grep | wc -l)
echo "Processos Chrome/Chromium ativos: $chrome_procs"
if [ $chrome_procs -gt 0 ]; then
    echo "Processos encontrados:"
    ps aux | grep -E "(chrome|chromium)" | grep -v grep | awk '{print "  PID: " $2 " - " $11}'
fi

echo -e "\nüìã 7. MEM√ìRIA E RECURSOS:"
echo "Mem√≥ria:"
free -h | head -2
echo "Disk space:"
df -h / | tail -1

echo -e "\nüìã 8. NETWORK:"
echo "Conectividade internet:"
if ping -c 1 8.8.8.8 &> /dev/null; then
    echo "‚úÖ Internet OK"
else
    echo "‚ùå Sem internet"
fi

echo "Conectividade WhatsApp:"
if curl -s --max-time 5 https://web.whatsapp.com > /dev/null; then
    echo "‚úÖ WhatsApp Web acess√≠vel"
else
    echo "‚ùå WhatsApp Web n√£o acess√≠vel"
fi

echo -e "\nüìã 9. WHATSAPP WEB.JS:"
if [ -f "package.json" ]; then
    echo "WhatsApp Web.js version:"
    npm list whatsapp-web.js 2>/dev/null | grep whatsapp-web.js || echo "‚ùå N√£o instalado"
    echo "Puppeteer version:"
    npm list puppeteer 2>/dev/null | grep puppeteer || echo "‚ùå N√£o encontrado"
else
    echo "‚ùå package.json n√£o encontrado"
fi

echo -e "\nüéØ RECOMENDA√á√ïES:"
echo "=================================="

# Verificar vers√£o do Chrome
chrome_version=$(google-chrome --version 2>/dev/null | grep -oE '[0-9]+\.[0-9]+' | head -1)
if [ ! -z "$chrome_version" ]; then
    major_version=$(echo $chrome_version | cut -d'.' -f1)
    if [ $major_version -gt 130 ]; then
        echo "‚ö†Ô∏è Chrome muito novo ($chrome_version) - recomendado Chrome 120-130"
        echo "üí° Execute: ./install-chrome-compatible.sh"
    else
        echo "‚úÖ Vers√£o do Chrome compat√≠vel ($chrome_version)"
    fi
fi

# Verificar Xvfb
if [ -z "$DISPLAY" ] || [ "$DISPLAY" = ":0" ]; then
    echo "‚ö†Ô∏è Display n√£o configurado para headless"
    echo "üí° Execute: export DISPLAY=:99"
fi

# Verificar depend√™ncias
missing_libs=()
for lib in "${libs[@]}"; do
    if ! dpkg -l | grep -q "^ii.*$lib"; then
        missing_libs+=("$lib")
    fi
done

if [ ${#missing_libs[@]} -gt 0 ]; then
    echo "‚ö†Ô∏è Bibliotecas faltando: ${missing_libs[*]}"
    echo "üí° Execute: sudo apt install -y ${missing_libs[*]}"
fi

echo -e "\nüöÄ PR√ìXIMOS PASSOS:"
echo "1. Corrigir problemas encontrados acima"
echo "2. Executar: node test-basic.js"
echo "3. Se falhar: ./install-chrome-compatible.sh"
